<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>gui on Blogonresearch</title>
    
    
    
    <link>https://blogonresearch.github.io/tags/gui/</link>
    <description>Recent content in gui on Blogonresearch</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 14 Sep 2022 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://blogonresearch.github.io/tags/gui/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>One Function or Many Functions</title>
      <link>https://blogonresearch.github.io/post/2022-09-14-one-function-or-many-functions/</link>
      <pubDate>Wed, 14 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://blogonresearch.github.io/post/2022-09-14-one-function-or-many-functions/</guid>
      <description>
        
          
          
          
        
        
        &lt;p&gt;I am thinking about the differences
between R and SPSS in doing analysis:
one function for one analysis, and
several functions for one analysis.&lt;/p&gt;
&lt;p&gt;Though not always the case, in R, it is
common to do an analysis using several
functions. One of them is the &amp;ldquo;main&amp;rdquo;
function that do the main analysis.
Other functions are used to extract
information or compute other statistics.&lt;/p&gt;
&lt;p&gt;For example, to do multiple regression,
this is what we may do:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Create a Test Dataset&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;set.seed&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;586045&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;n &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dat &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;data.frame&lt;/span&gt;(x1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rnorm&lt;/span&gt;(n, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                  x2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rnorm&lt;/span&gt;(n, &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dat&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;y &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; dat&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;x1 &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; dat&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;x2 &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rnorm&lt;/span&gt;(n, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Do regression&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;lm_out &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lm&lt;/span&gt;(y &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; x1 &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; x2, dat)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The main analysis is done by &lt;code&gt;lm()&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;We then use other functions on the
output of &lt;code&gt;lm()&lt;/code&gt;. For example, we can use
&lt;code&gt;summary()&lt;/code&gt; to print commonly requested
results:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;summary&lt;/span&gt;(lm_out)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;## 
## Call:
## lm(formula = y ~ x1 + x2, data = dat)
## 
## Residuals:
##     Min      1Q  Median      3Q     Max 
## -36.807 -10.733   0.153   9.472  37.611 
## 
## Coefficients:
##             Estimate Std. Error t value Pr(&amp;gt;|t|)   
## (Intercept) -20.7634    12.0270  -1.726  0.08746 . 
## x1            2.8688     1.6483   1.740  0.08495 . 
## x2            2.5771     0.8555   3.012  0.00331 **
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1
## 
## Residual standard error: 15.69 on 97 degrees of freedom
## Multiple R-squared:  0.1113,	Adjusted R-squared:  0.09295 
## F-statistic: 6.072 on 2 and 97 DF,  p-value: 0.003276
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Confidence intervals and variance-covariance
matrix of the estimates can be obtained
by &lt;code&gt;confint()&lt;/code&gt; and &lt;code&gt;vcov()&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;confint&lt;/span&gt;(lm_out)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;##                   2.5 %   97.5 %
## (Intercept) -44.6335974 3.106785
## x1           -0.4025881 6.140222
## x2            0.8791251 4.275063
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;vcov&lt;/span&gt;(lm_out)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;##             (Intercept)            x1           x2
## (Intercept)  144.647827 -13.347713331 -7.460851584
## x1           -13.347713   2.716868988 -0.005532551
## x2            -7.460852  -0.005532551  0.731913160
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;There are many functions for other statistics,
such as influential statistics and model
comparison.&lt;/p&gt;
&lt;p&gt;In SPSS, to do analysis, we usually use a
dialog box from the pull down menu,
select variables, check some checkboxes,
use some buttons to open other dialog
boxes and set other options, click OK,
and all the requested results are in
the output.&lt;/p&gt;
&lt;p&gt;I used to think that this approach is
due to the graphical user interface (GUI),
which is the strength of SPSS. I forgot
that (a) the GUI is a &amp;ldquo;syntax generator,&amp;rdquo;
and (b) the format of SPSS syntax we have
nowadays is very similar to that in SPSS
before it has a GUI. Actually, when I
first learned SPSS in 90&amp;rsquo;s, I did not even have
access to a PC version with text menu.
Syntax command was the only way to do analysis
in SPSS. For example, &lt;code&gt;REGRESSION&lt;/code&gt; is
the command, and all the checkboxes
and options are values for subcommands,
like arguments in R functions.&lt;/p&gt;
&lt;p&gt;So, the common way we do analysis in
SPSS, with one command for one analysis,
is not due to the GUI. It has always been
this way, at least in the version I used
in early 90&amp;rsquo;s, before systems like Windows
became popular.&lt;/p&gt;
&lt;p&gt;So, for an analysis, such as multiple
regression, one function, or many functions?&lt;/p&gt;
&lt;p&gt;When I write functions or develop packages,
I generally adopt the
do-one-thing-and-do-it-well principle,
though what constitutes &amp;ldquo;one thing&amp;rdquo;
is not always clear. This principle make
it easy for me to write, debug, and
maintain a function or package.&lt;/p&gt;
&lt;p&gt;However, for users who are used to using
GUI, using one function to do many things
in an analysis is conceptually similar
to using a dialog box, thought without
the dialog box.
The many-function approach does not fit
well with the experience in using a dialog box.&lt;/p&gt;
&lt;p&gt;In R, we certainly can write a function
that calls other functions, simulating
commands like &lt;code&gt;REGRESSION&lt;/code&gt; in SPSS.&lt;/p&gt;
&lt;p&gt;So, I think this is not a debate
of which approach is better. In R, we
can do both, and let the users do analysis
in whatever approach they like. For
development, the do-one-thing-and-do-it-well
approach is a better approach. However,
for users, especially when developing
GUI, the one-function approach may be
more convenient to the users. The function
in the one-function approach, like
&lt;code&gt;REGRESSION&lt;/code&gt;, is like a wrapper of
a collection of functions: an interface
to them.&lt;/p&gt;
&lt;p&gt;For example, we can write an R function
similar to &lt;code&gt;REGRESSION&lt;/code&gt; in SPSS. In SPSS,
if all the default options are what we need,
this command is sufficient:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;REGRESSION
 /DEPENDENT y
 /ENTER x1 x2.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;To request confidence intervals
(&lt;code&gt;confint()&lt;/code&gt; in R) and the variance-covariance
matrix of the estimates (&lt;code&gt;vcov()&lt;/code&gt; in R),
this will do:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;REGRESSION
 /STATISTICS DEFAULT BCOV CI(95)
 /DEPENDENT y
 /ENTER x1 x2.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;A similar function can be written in R:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;regression&lt;/span&gt;(data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; dat,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           dep &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;y&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           ivs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;x1&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;x2&amp;#34;&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We can write it in a more &amp;ldquo;R-way&amp;rdquo;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;regression&lt;/span&gt;(data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; dat,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           model &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; y &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; x1 &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; x2)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The default printout is something similar to
SPSS. It can be a list of tables (data frames)
and a print method for printing the output.&lt;/p&gt;
&lt;p&gt;Actually, we can still say
that we are adopting the do-one-thing-and-do-it-well
approach, although the &amp;ldquo;one thing&amp;rdquo; is
&amp;ldquo;an interface to a set of functions.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;I am not trying to argue that we should
use this or that approach. They are not
mutually exclusive. I am just
wondering how
to make using R by writing scripts more
accessible to users who are used to GUI,
while still keeping the
do-one-thing-and-do-it-well principle.
Writing these kinds of wrappers may also
make it easier to create GUIs for them.
For example, as long as &lt;code&gt;...&lt;/code&gt; is not
used, a generic function can be developed
to check the arguments of a function
using its definition and then
automatically generate a dialog
box for it. For a wrapper with
a lot of arguments, a configuration
file can be used to customize the
dialog box.&lt;/p&gt;
&lt;p&gt;P.S.: jamovi is already doing something
similar. Behind the dialog boxes are
kind of wrapper functions. However,
though can be used in console, the
modules are, naturally, supposed to be
used inside jamovi.&lt;/p&gt;

        
        </description>
    </item>
    
  </channel>
</rss>